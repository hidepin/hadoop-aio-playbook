---
# file: roles/hadoop_pesudo/tasks/main.yml

- name: Oracle JDK install check
  command: rpm -q jdk
  register: inst_jdk
  failed_when: inst_jdk.rc not in [0,1]
  changed_when: inst_jdk.rc != 0

- name: copy Oracle JDK
  copy: src={{jdk}} dest=/tmp
  when: inst_jdk.rc != 0

- name: Oracle JDK install
  yum: name=/tmp/{{jdk}} state=present
  when: inst_jdk.rc != 0

- name: Add hadoop group
  group:
    name={{item.group}}
    gid={{item.gid}}
  with_items: hadoop_user

- name: Add hadoop user
  user:
    name="{{item.name}}"
    password="{{item.password}}"
    uid="{{item.uid}}"
    group="{{item.group}}"
    comment="{{item.name}}"
  with_items: hadoop_user

- name: Add a Cloudera reposigory key
  rpm_key:
    key=http://archive.cloudera.com/cdh5/redhat/6/x86_64/cdh/RPM-GPG-KEY-cloudera
    state=present

- name: install CDH5 package
  yum:
    name=http://archive.cloudera.com/cdh5/one-click-install/redhat/6/x86_64/cloudera-cdh-5-0.x86_64.rpm
    state=present

- name: cdh version 5.latest to 5.1.3
  lineinfile: dest=/etc/yum.repos.d/cloudera-cdh5.repo regexp="cdh/5/$" line="baseurl=http://archive.cloudera.com/cdh5/redhat/6/x86_64/cdh/5.1.3/" state=present

- name: cdh packages install
  yum: name={{item}} state=present
  with_items:
    - hadoop-conf-pseudo
    - hive
    - hive-metastore
    - hive-server2
    - zookeeper-server
    - hive-jdbc
    - impala
    - impala-server
    - impala-state-store
    - impala-catalog
    - impala-shell

- name: hdfs namenode format check 
  command: ls /var/lib/hadoop-hdfs/cache/hdfs/dfs/name/current
  register: hdfs_format
  failed_when: hdfs_format.rc not in [0,1,2]
  changed_when: hdfs_format.rc not in [0,1]

- name: hdfs namenode format
  shell: echo Y | service hadoop-hdfs-namenode init
  when: hdfs_format.rc not in [0,1]

- name: hadoop hdfs service start
  service: name={{item}} state=started enabled=yes
  with_items:
    - hadoop-hdfs-namenode
    - hadoop-hdfs-secondarynamenode
    - hadoop-hdfs-datanode

- name: hdfs structure check 
  command: sudo -u hdfs hadoop fs -ls -R /
  register: hdfs_structure
  failed_when: hdfs_structure.rc not in [0,1,2]
  changed_when: hdfs_structure.stdout.find('/tmp') == -1

- name: hdfs structure create
  command: /usr/lib/hadoop/libexec/init-hdfs.sh
  when: hdfs_structure.stdout.find('/tmp') == -1

- name: hdfs user direcrtory create
  shell: sudo -u hdfs hadoop fs -mkdir /user/{{item.name}} && sudo -u hdfs hadoop fs -chown {{item.name}} /user/{{item.name}}
  when: hdfs_structure.stdout.find('/user/{{item.name}}') == -1
  with_items: hadoop_user

- name: hadoop-env.sh setup
  template: src=hadoop-env.sh.j2 dest=/etc/hadoop/conf/hadoop-env.sh owner=root group=root mode=755

- name: hadoop yarn service start
  service: name={{item}} state=started enabled=yes
  with_items:
    - hadoop-yarn-resourcemanager
    - hadoop-yarn-nodemanager
    - hadoop-mapreduce-historyserver

- name: postgresql package install
  yum: name={{item}} state=present
  with_items:
    - postgresql-server
    - postgresql-devel
    - postgresql-jdbc
    - python-psycopg2

- name: postgresql initdb
  command: service postgresql initdb creates=/var/lib/pgsql/data/PG_VERSION

- name: postgresql.conf update
  template: src=postgresql.conf.j2 dest=/var/lib/pgsql/data/postgresql.conf owner=postgres group=postgres mode=600
  notify: postgresql restart

- name: postgresql access permissions
  template: src=pg_hba.conf.j2 dest=/var/lib/pgsql/data/pg_hba.conf owner=postgres group=postgres mode=600
  notify: postgresql restart

- name: postgresql start
  service: name={{item}} state=started enabled=yes
  with_items:
    - postgresql

- name: jdbc setup for hive
  file: src=/usr/share/java/postgresql-jdbc.jar dest=/usr/lib/hive/lib/postgresql-jdbc.jar state=link

- name: zookeeper-server init
  command: service zookeeper-server init creates=/var/lib/zookeeper/version-2

- name: zookeeper start
  service: name={{item}} state=started enabled=yes
  with_items:
    - zookeeper-server

- name: hive db user create
  postgresql_user:
    name="hiveuser"
    password="hadoop123"
    login_host=127.0.0.1
    role_attr_flags=CREATEDB,CREATEROLE,SUPERUSER

- name: hive db create
  postgresql_db:
    name=metastore
    owner=hiveuser
    login_host=127.0.0.1

- name: hive schema check
  command: psql -h 127.0.0.1 -U hiveuser -d metastore -c "\d"
  register: hive_schema
  failed_when: hive_schema.rc not in [0,1]
  changed_when: hive_schema.stdout.find('VERSION') == -1

- name: create hive schema
  command: psql -h 127.0.0.1 -U hiveuser -d metastore -c "\i /usr/lib/hive/scripts/metastore/upgrade/postgres/hive-schema-0.13.0.postgres.sql"
  when: hive_schema.stdout.find('VERSION') == -1

- name: Add hiveuser group
  group: name=hiveuser

- name: Add hiveuser user
  user: name="hiveuer" group="hiveuser" comment="hiveuser" password="$6$SyJcx4.BrxC2qYqC$9xLeV5g.Vo80nhYupDfsHgra3Hy3IQBusU08zLFDJ3K0GIuJmSvyFQS2spLzRE5anYdqnZPswwwpkixH3bYdj1"

- name: hive user direcrtory create
  shell: sudo -u hdfs hadoop fs -mkdir -p /user/hiveuser && sudo -u hdfs hadoop fs -chown hiveuser /user/hiveuser
  when: hdfs_structure.stdout.find('/user/hiveuser') == -1

- name: hive warehouse direcrtory create
  shell: sudo -u hdfs hadoop fs -mkdir -p /user/hive/warehouse && sudo -u hdfs hadoop fs -chown hiveuser /user/hive/warehouse
  when: hdfs_structure.stdout.find('/user/hive/warehouse') == -1

- name: hive-site.xml update
  template: src=hive-site.xml.j2 dest=/etc/hive/conf/hive-site.xml owner=root group=root mode=644
  notify: restart hive

- name: hive service
  service: name={{item}} state=started enabled=yes
  with_items:
    - hive-metastore
    - hive-server2

- name: implate conf settings about hadoop
  file: src=/etc/hadoop/conf/{{item}} dest=/etc/impala/conf/{{item}} state=link
  with_items:
    - hdfs-site.xml
    - core-site.xml

- name: implate conf settings about hadoop
  file: src=/etc/hive/conf/{{item}} dest=/etc/impala/conf/{{item}} state=link
  with_items:
    - hive-site.xml

- name: implara service
  service: name={{item}} state=started enabled=yes
  with_items:
    - impala-state-store
    - impala-catalog
    - impala-server
